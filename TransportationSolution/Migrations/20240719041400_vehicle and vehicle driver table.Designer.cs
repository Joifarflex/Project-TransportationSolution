// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransportationSolution.Data;

#nullable disable

namespace TransportationSolution.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240719041400_vehicle and vehicle driver table")]
    partial class vehicleandvehicledrivertable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TransportationSolution.Model.Driver", b =>
                {
                    b.Property<int>("driverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("driverId"));

                    b.Property<string>("driverAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("driverCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("driverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("driverId");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("TransportationSolution.Model.Vehicle", b =>
                {
                    b.Property<int>("vehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleId"));

                    b.Property<bool>("isVendor")
                        .HasColumnType("bit");

                    b.Property<string>("licenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("vehicleId");

                    b.ToTable("Vehicle");

                    b.HasData(
                        new
                        {
                            vehicleId = 1,
                            isVendor = false,
                            licenseNumber = "BB6701C",
                            vehicleTypeCode = "TYT01",
                            vehicleTypeName = "TOYOTA Avanza 2007",
                            year = 2007
                        });
                });

            modelBuilder.Entity("TransportationSolution.Model.VehicleDriverMatrix", b =>
                {
                    b.Property<int>("vehicleDriverMatrixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicleDriverMatrixId"));

                    b.Property<string>("driverCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("driverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("durationEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("durationStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("licenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("vehicleId")
                        .HasColumnType("int");

                    b.Property<string>("vehicleTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vehicleDriverMatrixId");

                    b.ToTable("vehicleDriverMatrix");

                    b.HasData(
                        new
                        {
                            vehicleDriverMatrixId = 1,
                            driverCode = "AA01",
                            driverId = 1,
                            durationEnd = new DateTime(2024, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            durationStart = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            isActive = true,
                            licenseNumber = "BB6701C",
                            vehicleId = 1,
                            vehicleTypeCode = "TYT01"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
